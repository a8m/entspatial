// Code generated by entc, DO NOT EDIT.

package location

const (
	// Label holds the string label denoting the location type in the database.
	Label = "location"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCoords holds the string denoting the coords field in the database.
	FieldCoords = "coords"

	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildren holds the string denoting the children edge name in mutations.
	EdgeChildren = "children"

	// Table holds the table name of the location in the database.
	Table = "locations"
	// ParentTable is the table the holds the parent relation/edge.
	ParentTable = "locations"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "location_children"
	// ChildrenTable is the table the holds the children relation/edge.
	ChildrenTable = "locations"
	// ChildrenColumn is the table column denoting the children relation/edge.
	ChildrenColumn = "location_children"
)

// Columns holds all SQL columns for location fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCoords,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Location type.
var ForeignKeys = []string{
	"location_children",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
